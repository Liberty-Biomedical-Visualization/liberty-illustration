name: Deployment
on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      ref:
        description: Ref to be deployed
        required: true
        type: string
env:
  CONTENTFUL_ASSET_CDN_HOSTNAME: ${{vars.CONTENTFUL_ASSET_CDN_HOSTNAME}}
  CONTENTFUL_IMAGE_CDN_HOSTNAME: ${{vars.CONTENTFUL_IMAGE_CDN_HOSTNAME}}
  CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
      - name: Setup
        uses: ./.github/actions/setup
      - name: Run Unit and Integration Tests
        run: npm run test
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN_DEVELOPMENT }}
          CONTENTFUL_ENVIRONMENT: ${{ vars.CONTENTFUL_ENVIRONMENT_DEVELOPMENT }}
      - name: Deploy Staging
        id: deploy-staging
        uses: amondnet/vercel-action@v25
        with:
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN_PRODUCTION }}
          CONTENTFUL_ENVIRONMENT: ${{ vars.CONTENTFUL_ENVIRONMENT_PRODUCTION }}
      - name: Run E2E Tests
        run: npm run test:e2e:run
        env:
          E2E_BASE_URL: ${{ steps.deploy-staging.outputs.preview-url }}
          E2E_DEPLOYMENT: true
      - name: Deploy Production
        uses: amondnet/vercel-action@v25
        with:
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: --prebuilt --prod
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
